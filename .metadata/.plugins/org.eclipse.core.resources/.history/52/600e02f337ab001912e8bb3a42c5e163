package com.palaciossystems.bookMyShow.api;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker;
import org.springframework.cloud.netflix.hystrix.dashboard.EnableHystrixDashboard;
import org.springframework.context.annotation.Bean;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;

@SpringBootApplication
@RestController
@EnableCircuitBreaker
@EnableHystrixDashboard
public class BookMyShowApplication {
	
	@Autowired
	private RestTemplate template;
	
	
	@HystrixCommand(groupKey="Palacios Systems", commandKey="Palacios Systems", fallbackMethod="HystrixFallBac")
	@GetMapping("/BookNow")
	@ResponseBody
	public String BookShow() {	
		String emailServiceResponse = template.getForObject("http://localhost:9000/emailService/send", String.class);
		String paymentServiceResponse = template.getForObject("http://localhost:9001/paymentService/pay", String.class);
		return emailServiceResponse + "\n" + paymentServiceResponse;
	}
	
	@GetMapping("/BookNowWithaoutHystrix")
	public String BookShowWithoutHystrix() {	
		String emailServiceResponse = template.getForObject("http://localhost:9000/emailService/send", String.class);
		String paymentServiceResponse = template.getForObject("http://localhost:9001/paymentService/pay", String.class);
		return emailServiceResponse + "\n" + paymentServiceResponse;
	}

	public static void main(String[] args) {
		SpringApplication.run(BookMyShowApplication.class, args);
	}
	
	@Bean
	public RestTemplate template() {
		return new RestTemplate();
	}
	
	
	public String HystrixFallBac() {
		return "Proceso caido, ha ingresado al metodo de contingencia";
	}

}
